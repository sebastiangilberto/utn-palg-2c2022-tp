@startuml

interface PersistentObjects {
  +void creteSession(long, long)
  +void store(long, Object)
  +Object load(long, Class<?>)
  +Object remove(long, Class<?>)
  +void destroySession(long)
  +void addListener(SessionListener)
  +void removeListener(SessionListener)
}

class PersistentObjectsImpl {
  mapper: ObjectMapper
  manager: SessionManager
}

interface SessionListener {
  +void sessionClosed(long)
  +void sessionStillClosed(long)
  +void sessionOpened(long)
  +void sessionStillOpened(long)
}

class ConsoleLoggerSessionListener {
  Logger: Logger
}

class Session {
  key: String
  timeout: int
  status: SessionStatus
  +void close()
  +void open()
}

class SessionManager {
  sessionRepository: SessionRepository
  objectDetailRepository: ObjectDetailRepository
  listenerPeriod: Long
  +void createSession(long, long)
  +void destroySession(long)
  +void store(long, ObjectDetail)
  +void load(long,Class<?>)
  +void remove(long,Class<?>)
}

class SessionChecker {
  manager: SessionManager
  statuses: Map<long, SessionStatus>
  listenerPeriod: Long
  +void checkStatus(Session)
}


interface TimerTask {
  +run()
}

interface ObjectMapper {
  +toObject(String, Class)
  +toJson(Object)
}

class PersistableStrategy {
+ boolean shouldSkipClass(Class<?>)
+ boolean shouldSkipField(FieldAttributes)
}

class JsonMapper {
}

interface ObjectDetailRepository {
  +findByKey(String)
  +deleteByKey(String)
}

interface SessionRepository {
}

interface CrudRepository{
  +save(Entity)
}

enum SessionStatus{
OPEN, CLOSED
}

ConsoleLoggerSessionListener --|> SessionListener
PersistentObjectsImpl --|> PersistentObjects
PersistentObjectsImpl --> SessionManager
PersistentObjectsImpl --> ObjectMapper
SessionManager --> ObjectDetailRepository
SessionManager --> SessionRepository
SessionManager --> Session
SessionChecker --> SessionManager
SessionChecker --|> TimerTask
SessionChecker --> SessionStatus
SessionManager "1" --> "N" SessionListener
ObjectDetailRepository --|> CrudRepository
SessionRepository --|> CrudRepository
ObjectMapper --|> JsonMapper
JsonMapper --> PersistableStrategy


@enduml